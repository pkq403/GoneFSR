llvmgen-test3
Solution >>>
; ModuleID = "module"
target triple = "unknown-unknown-unknown"
target datalayout = ""

define void @"main"()
{
entry:
  store i32 2, i32* @"x"
  store double 0x400921f9f01b866e, double* @"pi"
  store i8 97, i8* @"a"
  %"R4" = load i32, i32* @"x"
  call void @"_print_int"(i32 %"R4")
  %"R5" = load double, double* @"pi"
  call void @"_print_float"(double %"R5")
  %"R6" = load i8, i8* @"a"
  call void @"_print_byte"(i8 %"R6")
  ret void
}

declare void @"_print_int"(i32 %".1")

declare void @"_print_float"(double %".1")

declare void @"_print_byte"(i8 %".1")

@"x" = global i32 0
@"pi" = global double              0x0
@"a" = global i8 0
<<<<
My implementation solution
; ModuleID = "module"
target triple = "unknown-unknown-unknown"
target datalayout = ""

define void @"main"()
{
entry:
  store i32 2, i32* @"x"
  store double 0x400921f9f01b866e, double* @"pi"
  store i8 97, i8* @"a"
  %"R4" = load i32, i32* @"x"
  call void @"_print_int"(i32 %"R4")
  %"R5" = load double, double* @"pi"
  call void @"_print_float"(double %"R5")
  %"R6" = load i8, i8* @"a"
  call void @"_print_byte"(i8 %"R6")
  ret void
}

declare void @"_print_int"(i32 %".1")

declare void @"_print_float"(double %".1")

declare void @"_print_byte"(i8 %".1")

@"x" = global i32 0
@"pi" = global double              0x0
@"a" = global i8 0
