llvmgen-test1
Solution >>>
; ModuleID = "module"
target triple = "unknown-unknown-unknown"
target datalayout = ""

define void @"main"()
{
entry:
  %"R4" = mul i32 4, 5
  %"R5" = add i32 3, %"R4"
  %"R7" = sub i32 %"R5", 6
  %"R9" = sdiv i32 %"R7", 7
  call void @"_print_int"(i32 %"R9")
  %"R13" = fmul double 0x4010000000000000, 0x4014000000000000
  %"R14" = fadd double 0x4008000000000000, %"R13"
  %"R16" = fsub double %"R14", 0x4018000000000000
  %"R18" = fdiv double %"R16", 0x401c000000000000
  call void @"_print_float"(double %"R18")
  ret void
}

declare void @"_print_int"(i32 %".1")

declare void @"_print_float"(double %".1")

declare void @"_print_byte"(i8 %".1")

<<<<
My implementation solution
; ModuleID = "module"
target triple = "unknown-unknown-unknown"
target datalayout = ""

define void @"main"()
{
entry:
  %"R4" = mul i32 4, 5
  %"R5" = add i32 3, %"R4"
  %"R7" = sub i32 %"R5", 6
  %"R9" = sdiv i32 %"R7", 7
  call void @"_print_int"(i32 %"R9")
  %"R13" = fmul double 0x4010000000000000, 0x4014000000000000
  %"R14" = fadd double 0x4008000000000000, %"R13"
  %"R16" = fsub double %"R14", 0x4018000000000000
  %"R18" = fdiv double %"R16", 0x401c000000000000
  call void @"_print_float"(double %"R18")
  ret void
}

declare void @"_print_int"(i32 %".1")

declare void @"_print_float"(double %".1")

declare void @"_print_byte"(i8 %".1")

